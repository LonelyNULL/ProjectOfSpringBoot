package ${package.Controller};

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
#end

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import ${package.Service}.${table.serviceName};
import ${voPackage}.${voName};
import ${convertPackage}.${convertName};
import ${package.Entity}.${entity};

/**
 * <p>
 * $!{table.comment} 接口
 * </p>
 *
 * @author ${author}
 * @date ${cfg.datetime}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${swagger2})
@Api(tags = {"$!{table.comment} 接口"})
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    /**
    * $!{table.comment} 服务类
    */
    private ${table.serviceName} ${serviceInstName};

    /**
     * $!{table.comment} 转换类
     */
    private ${convertName} ${convertInstName};

    /**
     * 构造函数
     * @param ${serviceInstName} $!{table.comment} 服务类
     * @param ${convertInstName} 服务类
     * @author ${author}
     * @date ${cfg.datetime}
     */
    public ${table.controllerName}(${table.serviceName} ${serviceInstName}, ${convertName} ${convertInstName}) {
        this.${serviceInstName} = ${serviceInstName};
        this.${convertInstName} = ${convertInstName};
    }

    /**
    * 添加$!{table.comment}
    * @param ${voInstName} $!{table.comment}
    * @return ${voPackage}.${voName} $!{table.comment}
    * @author ${author}
    * @date ${cfg.datetime}
    */
    @PostMapping("")
    @ResponseStatus(HttpStatus.CREATED)
    #if(${swagger2})
    @ApiOperation("添加$!{table.comment}")
    #end
    public ${voName} insert${entityName}(@RequestBody ${voName} ${voInstName}) {
        ${entity} ${poInstName} = ${convertInstName}.convertFrom(${voInstName}); // 视图对象转持久化对象
        ${serviceInstName}.save(userPo); // 添加$!{table.comment}
        return ${convertInstName}.convertTo(userPo); // 持久化对象转视图对象
    }

    /**
    * 删除$!{table.comment}
    * @param ${keyName} $!{table.comment}主键id
    * @return boolean 是否删除成功
    * @author ${author}
    * @date ${cfg.datetime}
    */
    @DeleteMapping("/{${keyName}}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    #if(${swagger2})
    @ApiOperation("删除$!{table.comment}")
    @ApiImplicitParam(name = "${keyName}", value = "$!{table.comment}主键id", required = true)
    #end
    public boolean delete${entityName}(@PathVariable("${keyName}") ${keyType} ${keyName}) {
        return ${serviceInstName}.removeById(${keyName});
    }

    /**
    * 更新$!{table.comment}
    * @param ${keyName} $!{table.comment}主键id
    * @param ${voInstName} $!{table.comment}
    * @return ${voPackage}.${voName} $!{table.comment}
    * @author ${author}
    * @date ${cfg.datetime}
    */
    @PutMapping("/{${keyName}}")
    @ResponseStatus(HttpStatus.CREATED)
    #if(${swagger2})
    @ApiOperation("更新$!{table.comment}")
    @ApiImplicitParam(name = "${keyName}", value = "$!{table.comment}主键id", required = true)
    #end
    public ${voName} update${entityName}(@PathVariable("${keyName}") ${keyType} ${keyName}, @RequestBody ${voName} ${voInstName}) {
        ${entity} ${poInstName} = ${convertInstName}.convertFrom(${voInstName}); // 视图对象转持久化对象
        ${poInstName}.set${keyCapitalName}(${keyName}); // 设置主键id
        ${serviceInstName}.updateById(${poInstName}); // 更新$!{table.comment}
        return ${convertInstName}.convertTo(${poInstName}); // 持久化对象转视图对象
    }

    /**
     * 查询单个$!{table.comment}
     * @return ${voPackage}.${voName} 单个$!{table.comment}
     * @author ${author}
     * @date ${cfg.datetime}
     */
    @GetMapping("/{${keyName}}")
    @ResponseStatus(HttpStatus.OK)
    #if(${swagger2})
    @ApiOperation("查询单个$!{table.comment}")
    @ApiImplicitParam(name = "${keyName}", value = "$!{table.comment}主键id", required = true)
    #end
    public ${voName} get${entityName}(@PathVariable("${keyName}") ${keyType} ${keyName}) {
        ${entity} ${poInstName} = ${serviceInstName}.getById(${keyName}); // 查询单个$!{table.comment}
        return ${convertInstName}.convertTo(${poInstName}); // 持久化对象转视图对象
    }

}

#end